# -*- coding: utf-8 -*-
"""algolution-2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NzwA1rBWfYKhFvX9ZkqZU0e3S6TVmu0C
"""

def maxSubarraySum(arr):
    res = arr[0]
    for i in range(len(arr)):
        currSum = 0
        for j in range(i, len(arr)):
            currSum = currSum + arr[j]
            res = max(res, currSum)
    return res
'''
if __name__ == "__main__":
    arr = [2, 3, -8, 7, -1, 2, 3]
    print(maxSubarraySum(arr))
'''
arr = [2, 3, -8, 7, -1, 2, 3]
print(maxSubarraySum(arr))

def count_inversion(arr):
    n, c = len(arr), 0
    for i in range(n):
        for j in range(i+1, n):
            if arr[i] > arr[j] and i<j:
                c += 1
    return c

arr = [7, 2, 6, 3]
print(count_inversion(arr))

def k_largest(arr):
    k = 2
    num = []
    for i in range(len(arr)):
        m = max(arr)
        num.append(m)
        arr.remove(m)
    return num[k-1]

arr = [3, 2, 1, 5, 6, 4]  # 6 5 4 3 2 1
print(k_largest(arr))